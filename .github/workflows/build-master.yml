#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to you under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: master

env:
  MAVEN_OPTS: -Xmx3000m
  MAVEN_ARGS: -V -ntp -Dhttp.keepAlive=false -e

on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: set-up java
        uses: AdoptOpenJDK/install-jdk@v1
        with:
          version: 11
      - name: Build camel (master)
        run: |
          git clone --depth 1 --branch master https://github.com/apache/camel.git \
            && cd camel \
            && echo "Current Camel commit:" $(git rev-parse HEAD) \
            && ./mvnw ${MAVEN_ARGS} clean install -Pfastinstall
      - name: Build camel-quarkus (camel-master)
        run: |
          git clone --depth 1 --branch camel-master https://github.com/apache/camel-quarkus.git \
            && cd camel-quarkus \
            && echo "Current Camel Quarkus commit:" $(git rev-parse HEAD) \
            && ./mvnw ${MAVEN_ARGS} clean install -Dquickly
      - name: build
        run: |
          ./mvnw ${MAVEN_ARGS} clean install
      - name: deploy
        env:
          NEXUS_DEPLOY_USERNAME: ${{ secrets. NEXUS_DEPLOY_USERNAME }}
          NEXUS_DEPLOY_PASSWORD: ${{ secrets. NEXUS_DEPLOY_PASSWORD }}
        run: |
          ./mvnw ${MAVEN_ARGS} clean deploy -DskipTests -Dnative -Ddocker -s .github/mvn-deploy-settings.xml